"""
Django settings for brscans project.

Generated by 'django-admin startproject' using Django 5.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

import os
from pathlib import Path

from dotenv import load_dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


load_dotenv()
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-y3ji3t=%kq$4%i95)-kqh6ey&dae795dve-r^+_xb_xm62s43&"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
PRODUCTION = os.environ.get("PRODUCTION", "False") == "True"

USE_S3 = True
ALLOWED_HOSTS = [
    "*",
]
INTERNAL_IPS = ["127.0.0.1", "localhost"]

CORS_ORIGIN_ALLOW_ALL = True


# Application definition

INSTALLED_APPS = [
    "debug_toolbar",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "corsheaders",
    "rest_framework",
    "brscans.manhwa.apps.manhwaConfig",
]

MIDDLEWARE = [
    "debug_toolbar.middleware.DebugToolbarMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "brscans.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "brscans.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": os.environ.get("DATABASE_ENGINE"),
        "NAME": os.environ.get("DATABASE_NAME"),
        "USER": os.environ.get("DATABASE_USER"),
        "PASSWORD": os.environ.get("DATABASE_PASS"),
        "HOST": os.environ.get("DATABASE_HOST"),
        "PORT": os.environ.get("DATABASE_PORT"),
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "pt-br"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

if PRODUCTION:
    CLOUDFRONT_DOMAIN = os.environ.get("CLOUDFRONT_DOMAIN")

    AWS_ACCESS_KEY_ID = os.environ.get("aws_access_key_id")
    AWS_SECRET_ACCESS_KEY = os.environ.get("aws_secret_access_key")
    AWS_SESSION_TOKEN = os.environ.get("aws_session_token")

    AWS_STORAGE_BUCKET_NAME = os.environ.get("S3_STATIC_BUCKET")
    AWS_S3_REGION_NAME = os.environ.get("S3_REGION")
    AWS_QUERYSTRING_EXPIRE = 604800
    AWS_S3_CUSTOM_DOMAIN = f"{CLOUDFRONT_DOMAIN}"

    STATICFILES_STORAGE = "brscans.storage_backends.StaticStorage"
    STATIC_URL = f"https://{CLOUDFRONT_DOMAIN}/static/"
    STATIC_LOCATION = "static"

    DEFAULT_FILE_STORAGE = "brscans.storage_backends.MediaStorage"
    MEDIA_URL = f"https://{CLOUDFRONT_DOMAIN}/media/"
    PUBLIC_MEDIA_LOCATION = "media/"
else:
    STATIC_ROOT = os.path.join(BASE_DIR, "..", "static")
    STATIC_URL = "static/"

    # our configuration
    MEDIA_ROOT = os.path.join(BASE_DIR, "..", "uploaded_files")
    MEDIA_URL = "/media/"


MAX_UPLOAD_SIZE = 20 * 1024 * 1024
TRANSLATOR_URL = os.environ.get("TRANSLATOR_URL")